/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pim.event;

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.MouseListener;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.SwingUtilities;
import pim.PanelInterface;
import pim.TextFieldListener;
import pim.util.WrapLayout;

/**
 * Aufgabenverwaltung fuer PIM
 *
 * @author Joerg Federspiel
 */
public class EventPanel extends JPanel implements PanelInterface {

    private static final int MAX_SIZE = 100;
    EventItem[] eventItems;
    private int size;
    private EventItem selectedItem;
    private ImageIcon okIcon;
    private ImageIcon cancelIcon;
    private boolean search;

    /**
     * Creates new form EventPanel
     */
    public EventPanel() {
        okIcon = new javax.swing.ImageIcon(getClass().getResource("/pim/icons/ok.png"));
        cancelIcon = new javax.swing.ImageIcon(getClass().getResource("/pim/icons/cancel.png"));
        
        search = false;
        eventItems = new EventItem[MAX_SIZE];
        size = 0;
        selectedItem = null;
        
        initComponents();
        
        TextFieldListener textFieldListener = new TextFieldListener();
        jTextFieldSearch.addMouseListener(textFieldListener);

        jPanelContent.setLayout(new WrapLayout(FlowLayout.LEFT, 10, 10));
        jPanelContent.setSize(new Dimension(300, 1));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPaneContent = new javax.swing.JScrollPane();
        jPanelContent = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonChange = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabelSearch = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(518, 355));

        javax.swing.GroupLayout jPanelContentLayout = new javax.swing.GroupLayout(jPanelContent);
        jPanelContent.setLayout(jPanelContentLayout);
        jPanelContentLayout.setHorizontalGroup(
            jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 674, Short.MAX_VALUE)
        );
        jPanelContentLayout.setVerticalGroup(
            jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );

        jScrollPaneContent.setViewportView(jPanelContent);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jButtonAdd.setText("Erstellen");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonChange.setText("Ändern");
        jButtonChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Löschen");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonChange, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButtonAdd)
                .addComponent(jButtonChange)
                .addComponent(jButtonDelete))
        );

        jPanel1.add(jPanel2);

        jLabelSearch.setText("Suche: ");
        jPanel1.add(jLabelSearch);

        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyReleased(evt);
            }
        });
        jPanel1.add(jTextFieldSearch);

        jButtonSearch.setIcon(okIcon);
        jButtonSearch.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 6, 6, 6));
        jButtonSearch.setEnabled(false);
        jButtonSearch.setIconTextGap(0);
        jButtonSearch.setInheritsPopupMenu(true);
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSearch);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneContent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPaneContent, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void initEventItems(String searchstring) {
        jPanelContent.removeAll();
        for (int i = 0; i < size; i++) {
            if (searchstring == null) {
                jPanelContent.add(eventItems[i]);
            } else {
                String regex = ".*" + searchstring.toLowerCase() + ".*";
                String title = eventItems[i].getEvent().getTitle().toLowerCase();
                String content = eventItems[i].getEvent().getContent().toLowerCase();
                if (title.matches(regex) || content.matches(regex)) {
                    jPanelContent.add(eventItems[i]);
                    search = true;
                }
            }
        }
        jScrollPaneContent.updateUI();
    }

    @Override
    public void updateValues(Object[] values) {
        if (values != null) {
            Event[] events = (Event[]) values;
            eventItems = new EventItem[100];
            size = events.length;
            for (int i = 0; i < size; i++) {
                eventItems[i] = new EventItem(events[i]);
                MouseListener listener = new java.awt.event.MouseAdapter() {
                    @Override
                    public void mousePressed(java.awt.event.MouseEvent evt) {
                        eventPanelMousePressed(evt);
                    }
                };
                eventItems[i].addListener(listener);
            }

        } else {
            eventItems = new EventItem[MAX_SIZE];
            size = 0;
        }
        initEventItems(null);
    }

    @Override
    public void insertValue(Object value) {
        Event event = (Event) value;
        EventItem eventItem = new EventItem(event);
        MouseListener listener = new java.awt.event.MouseAdapter() {
            @Override
            public void mousePressed(java.awt.event.MouseEvent evt) {
                eventPanelMousePressed(evt);
            }
        };
        eventItem.addListener(listener);
        eventItems[size++] = eventItem;
        jPanelContent.add(eventItem);
        jPanelContent.updateUI();
    }

    @Override
    public Object[] getValues() {
        Event[] events = new Event[size];
        for (int i = 0; i < size; i++) {
            events[i] = eventItems[i].getEvent();
        }
        return events;
    }

    @Override
    public void changeValue(Object value) {
        Event event = (Event) value;
        int index = getIndex(event);
        eventItems[index].setEvent(event);
        eventItems[index].update();
        jPanelContent.updateUI();
    }

    @Override
    public void deleteValue(Object value) {
        int index = getIndex((Event) value);
        for (int i = index; i < size - 1; i++) {
            eventItems[i] = eventItems[i + 1];
        }
        eventItems[--size] = null;
        selectedItem = null;
        selectEvent(null);
        initEventItems(null);
    }

    @Override
    public void showAddDialog(Object value, JFrame rootWindow) {
        Event event = null;
        if (value != null) {
            event = (Event) value;
        }
        CreateEventDialog dialog = new CreateEventDialog(rootWindow, true, event);
        dialog.setLocationRelativeTo(rootWindow);
        dialog.setVisible(true);
        event = dialog.getEvent();
        if (event != null) {
            insertValue(event);
        }
    }

    @Override
    public void showChangeDialog(Object value, JFrame rootWindow) {
        Event event = (Event) value;
        CreateEventDialog dialog = new CreateEventDialog(rootWindow, true, event);
        dialog.setLocationRelativeTo(rootWindow);
        dialog.setTitle(event.getTitle());
        dialog.setVisible(true);
        event = dialog.getEvent();
        if (event != null) {
            changeValue(event);
        }
    }

    @Override
    public void showDeleteDialog(Object value, JFrame rootWindow) {
        Event event = (Event) value;
        Object[] options = {"Ja", "Nein"};
        int n = JOptionPane.showOptionDialog(null,
                "Termin \"" + event.getTitle() + "\" löschen?",
                "Löschen bestätigen",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[0]);

        if (n == 0) {
            deleteValue(event);
        }
    }

    private void selectEvent(EventItem eventItem) {
        selectedItem = eventItem;
        for (int i = 0; i < size; i++) {
            eventItems[i].unselect();
        }
        if (eventItem != null) {
            eventItem.select();
        }
    }

    private int getIndex(Event event) {
        int index = -1;
        for (int i = 0; i < size; i++) {
            if (event == eventItems[i].getEvent()) {
                index = i;
                break;
            }
        }
        return index;
    }

    private void eventPanelMousePressed(java.awt.event.MouseEvent evt) {
        if (evt.getButton() == 1) {

            EventItem eventItem = null;
            if (evt.getComponent() instanceof EventItem) {
                eventItem = (EventItem) evt.getComponent();
                selectEvent(eventItem);
            }
            if (evt.getComponent() instanceof JTextArea) {
                eventItem = (EventItem) evt.getComponent().getParent().getParent().getParent();
                selectEvent(eventItem);
            }
            if (evt.getClickCount() == 2) {

                showChangeDialog(eventItem.getEvent(), getRootWindow());
            }
        }
    }

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        JFrame rootWindow = getRootWindow();
        showAddDialog(null, rootWindow);
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeActionPerformed
        JFrame rootWindow = getRootWindow();
        if (selectedItem != null) {
            showChangeDialog(selectedItem.getEvent(), rootWindow);
        } else {
            JOptionPane.showMessageDialog(rootWindow, "Es ist kein Termin ausgewählt.");
        }
    }//GEN-LAST:event_jButtonChangeActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        JFrame rootWindow = getRootWindow();
        if (selectedItem != null) {
            showDeleteDialog(selectedItem.getEvent(), rootWindow);
        } else {
            JOptionPane.showMessageDialog(getRootWindow(), "Es ist kein Termin ausgewählt.");
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        if (!search) {
            String searchstring = jTextFieldSearch.getText().trim();
            if (!searchstring.isEmpty()) {
                initEventItems(searchstring);
                if (!search) {
                    
                    initEventItems(null);
                    JOptionPane.showMessageDialog(getRootWindow(), "Nichts gefunden.");
                } else {
                    selectEvent(null);
                    jButtonSearch.setIcon(cancelIcon);
                }
            }
        } else {
            if (jTextFieldSearch.getText().trim().isEmpty()) {
                jButtonSearch.setEnabled(false);
            }
            search = false;
            jButtonSearch.setIcon(okIcon);
            initEventItems(null);
        }
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jTextFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyReleased
        if (!search && jTextFieldSearch.getText().trim().isEmpty()) {
            jButtonSearch.setEnabled(false);
        } else {
            jButtonSearch.setEnabled(true);
        }
    }//GEN-LAST:event_jTextFieldSearchKeyReleased

    private JFrame getRootWindow() {
        return (JFrame) SwingUtilities.getWindowAncestor(this.getParent());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonChange;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JLabel jLabelSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelContent;
    private javax.swing.JScrollPane jScrollPaneContent;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
}
