/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pim.exam;

import java.awt.Component;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author lk
 */
public class ExamPanel extends javax.swing.JPanel {
    
    private Exam[] exams;
    private int size;
    private DefaultTableModel model;
    
    
    /**
     * Creates new form ExamPanel
     */
    public ExamPanel(Exam[] exams) {
        initComponents();
        model = (DefaultTableModel) jTableExams.getModel();
        this.exams = new Exam[100];
        
        if (exams != null) {
            for (int i = 0; i < exams.length; i++) {
                insertExam(exams[i]);
            }
            initColumnSizes();
            calculateAverage();
        }
    }
  
    private void initColumnSizes() {
        TableColumn column;
        Component comp;
        int headWidth;
        int cellWidth;

        TableCellRenderer render = jTableExams.getTableHeader().getDefaultRenderer();
        
        int colNum = jTableExams.getColumnCount();
        int rowNum = jTableExams.getRowCount();
        
        for (int i = 0; i < (colNum); i++) {
            column = jTableExams.getColumnModel().getColumn(i);
            comp = render.getTableCellRendererComponent(
                    null, column.getHeaderValue(), false, false, 0, 0);
            headWidth = comp.getPreferredSize().width;
            cellWidth = 0; 
            
            for (int j = 0; j < (rowNum); j++) {
                comp = render.getTableCellRendererComponent(
                        jTableExams, jTableExams.getValueAt(j, i), false, false, j, i);
                cellWidth = Math.max(cellWidth, comp.getPreferredSize().width);
            }
            column.setPreferredWidth(Math.max(headWidth, cellWidth));
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxView = new javax.swing.JComboBox();
        jButtonAdd = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabelView = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableExams = new javax.swing.JTable();
        jLabelEctsTitle = new javax.swing.JLabel();
        jLabelEcts = new javax.swing.JLabel();
        jLabelAverageTitle = new javax.swing.JLabel();
        jLabelAverage = new javax.swing.JLabel();
        jButtonResult = new javax.swing.JButton();
        jButtonChange = new javax.swing.JButton();

        jComboBoxView.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Alle Klausuren", "Ohne Ergebnis", "WS 13/14", "SS 13", "WS 12/13", "SS 12", "WS 11/12", "SS 11", "WS 10/11" }));

        jButtonAdd.setText("Erstellen");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Löschen");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jLabelView.setText("Anzeige:");

        jTableExams.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fach", "Semester", "ECTS", "Datum", "Uhrzeit", "Raum", "Note", "Schnitt"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableExams.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTableExams);

        jLabelEctsTitle.setText("Erreichte ECTS:");

        jLabelEcts.setText("0");

        jLabelAverageTitle.setText("Notendurchschnitt:");

        jLabelAverage.setText("0,0");

        jButtonResult.setText("Ergebnis");
        jButtonResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResultActionPerformed(evt);
            }
        });

        jButtonChange.setText("Ändern");
        jButtonChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonChange, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonResult, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelView)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxView, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jLabelEctsTitle)
                .addGap(3, 3, 3)
                .addComponent(jLabelEcts)
                .addGap(18, 18, 18)
                .addComponent(jLabelAverageTitle)
                .addGap(3, 3, 3)
                .addComponent(jLabelAverage)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonResult)
                    .addComponent(jButtonDelete)
                    .addComponent(jButtonChange)
                    .addComponent(jButtonAdd)
                    .addComponent(jLabelView)
                    .addComponent(jComboBoxView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEctsTitle)
                    .addComponent(jLabelEcts)
                    .addComponent(jLabelAverageTitle)
                    .addComponent(jLabelAverage))
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        if (size < exams.length) {
            JFrame rootWindow = getRootWindow();
            CreateExamDialog dialog = new CreateExamDialog(rootWindow, true, null);
            dialog.setTitle("Klausur erstellen");
            dialog.setLocationRelativeTo(rootWindow);
            dialog.setVisible(true);
            Exam exam = dialog.getExam();
            if (exam != null) {
                insertExam(exam);
                jTableExams.changeSelection(size - 1, 0, true, false);
                calculateAverage();
            }
        } else {
            JOptionPane.showMessageDialog(null,
                    "Es können maximal " + exams.length + " Klausuren erstellt werden.");
        }
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        int index = getSelectedRow();
        if (index > -1) {
            
            Object[] options = {"Ja", "Nein"};
            int n = JOptionPane.showOptionDialog(null,
                    "Klausur \"" + exams[index].getSubject() + "\" löschen?",
                    "Löschen bestätigen",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[0]);
            
            if (n == 0) {
                deleteExam(index);
                calculateAverage();
            }
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResultActionPerformed
        int index = getSelectedRow();
        if (index > -1) {
            JFrame rootWindow = getRootWindow();
            GradesDialog dialog = new GradesDialog(rootWindow, true, exams[index]);
            dialog.setTitle(exams[index].getSubject());
            dialog.setLocationRelativeTo(rootWindow);
            dialog.setVisible(true);
            Exam exam = dialog.getExam();
            if (exam != null) {
                changeExam(index, exam);
                calculateAverage();
                
                /*
                int[] grades = exam.getNumbers();
                String s = "exams[i] = new Exam(\"" + exam.getSubject() + "\", \"" +
                        exam.getSemester() + "\", " + exam.getEcts() +
                        ", null, null, null, " + exam.getGrade() + ", \nnew int[]{";
                for (int i = 0; i< grades.length; i++) {
                   s = s + grades[i];
                   if (i < grades.length - 1) {
                       s = s + ", ";
                   }
                }
                s = s + "});";
                System.out.println(s);
                */
            }
        }
    }//GEN-LAST:event_jButtonResultActionPerformed

    private void jButtonChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeActionPerformed
        int index = getSelectedRow();
        if (index > -1) {
            JFrame rootWindow = getRootWindow();
            CreateExamDialog dialog = new CreateExamDialog(rootWindow, true, exams[index]);
            dialog.setTitle(exams[index].getSubject());
            dialog.setLocationRelativeTo(rootWindow);
            dialog.setVisible(true);
            Exam exam = dialog.getExam();
            if (exam != null) {
                changeExam(index, exam);
                calculateAverage();
            }
        }
    }//GEN-LAST:event_jButtonChangeActionPerformed

    private void insertExam(Exam exam) {
        exams[size++] = exam;
        model.addRow(exam.getTableRow());
    }
    
    private void deleteExam(int index) {
        for (int i = index; i < size - 1; i++) {
            exams[i] = exams[i + 1];
        }
        exams[--size] = null;
        model.removeRow(index);
    }
    
    private void changeExam(int index, Exam exam) {
        exams[index] = exam;
        model.removeRow(index); 
        model.insertRow(index, exam.getTableRow());
        jTableExams.changeSelection(index, 0, true, false);
    }
    
    
    private void calculateAverage() {
        int ects1 = 0;
        int ects2 = 0;
        double sum1 = 0d;
        double sum2 = 0d;
        for (int i = 0; i < size; i++) {
            if (exams[i].getGrade() > 0.0 && exams[i].getGrade() < 5.0) {
                sum1 += exams[i].getEcts() * exams[i].getGrade();
                ects1 += exams[i].getEcts();
                if (exams[i].getAverage() > 0.0) {
                    sum2 += exams[i].getEcts() * exams[i].getAverage();
                    ects2 += exams[i].getEcts();
                }
            }

        }
        double average1 = Math.round((sum1 / ects1) * 10d) / 10d;
        double average2 = Math.round((sum2 / ects2) * 10d) / 10d;
        jLabelEcts.setText(ects1 + "");
        jLabelAverage.setText(average1 + " / " + average2);
    }
    
    
    private int getSelectedRow() {
        int index = jTableExams.getSelectedRow();
        if (index < 0) {
            JOptionPane.showMessageDialog(null, "Es ist keine Klausur ausgewählt.");
        }
        return index;
    }

    private JFrame getRootWindow() {
        return (JFrame) SwingUtilities.getWindowAncestor(this.getParent());
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonChange;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonResult;
    private javax.swing.JComboBox jComboBoxView;
    private javax.swing.JLabel jLabelAverage;
    private javax.swing.JLabel jLabelAverageTitle;
    private javax.swing.JLabel jLabelEcts;
    private javax.swing.JLabel jLabelEctsTitle;
    private javax.swing.JLabel jLabelView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableExams;
    // End of variables declaration//GEN-END:variables
}
